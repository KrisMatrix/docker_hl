version: '3.8'

services:
  # redis:
  #   image: redis
  #   ports:
  #     - '6379:6379'
  # postgres:
  #   image: postgres
  #   environment:
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres
  #   ports:
  #     - '5432:5432'
  backend1:
    image: backend1
    build:
      context: Backend
      dockerfile: ./Dockerfile
    environment:
      DB_SCHEMA: postgres
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_HOST: postgres
    #  NODE_ENV: production
    ports:
      - 3000

  frontend1:
    image: frontend1
    build:
      context: FrontEnd
      dockerfile: ./Dockerfile
    #environment:
    #  NODE_ENV: production
    ports:
      - 8080

  # backend2:
  #   image: backend2
  #   build:
  #     context: Backend
  #     dockerfile: ./Dockerfile
  #   #environment:
  #   #  NODE_ENV: production
  #   ports:
  #     - 3000

  # frontend2:
  #   image: frontend2
  #   build:
  #     context: FrontEnd
  #     dockerfile: ./Dockerfile
  #   #environment:
  #   #  NODE_ENV: production
  #   ports:
  #     - 8080

  load-balancer:
    build: 
      context: nginx
      dockerfile: ./Dockerfile
    ports:
      - 80:80
    links:
      - backend1
      # - backend2
      - frontend1
      # - frontend2